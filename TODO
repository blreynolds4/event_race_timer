1. better model for assigning places
2. better logging
3. audit of everything sent to result builder for potential replay if stream is deleted




Tutorials on Testing
https://blog.jetbrains.com/go/2022/11/22/comprehensive-guide-to-testing-in-go/

https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwjwtoPE4dSAAxXFjIkEHftFCLsQwqsBegQIDRAG&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DFjkSJ1iXKpg&usg=AOvVaw3HPFQSBDP-wM4R9gdWU4Gr&opi=89978449

https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwjwtoPE4dSAAxXFjIkEHftFCLsQwqsBegQIDhAG&url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DXQzTUa9LPU8&usg=AOvVaw1TOzX0BIA5yTjiQOlO6cLX&opi=89978449


100% test coverage is goal

1. Implement scorers that read from result stream:
    Overall XC -- Place Name Grade Team Time (for each line, fastest at top of list)
    Team XC -- Place Team Points Top 5 Avg Top 7 Avg

    Results saved to db
    Scoring is also probably a stand alone app.  It monitors results and compiles them into scoring output.  Stores the data to db

2. Results web pages for all scoring types, one or more web services to show results web pages
3. Raspberry pi deployment so monitor can be set up to show overall and team scores on constant refresh


